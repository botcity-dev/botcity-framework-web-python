name: Tests

on:
  workflow_dispatch:
  branches:
    - "main"
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  test:
    runs-on: ${{ matrix.os }}
    defaults:
        run:
          shell: bash
    strategy:
      # Don't abort if a matrix combination fails
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10"]
        # Insert "undetected_chrome" when all issues with the lib are resolved.
        browser: ["firefox", "chrome", "edge"]
        headless: [true]
        exclude:
          # Can't install firefox using setup-firefox on Windows
          # See the issues below
          #   * https://github.com/browser-actions/setup-firefox/issues/252
          #   * https://github.com/abhi1693/setup-browser/issues/8
          - os: windows-latest
            browser: "firefox"
    steps:
      - uses: actions/checkout@v2
      - name: Install libgl1
        if: runner.os == 'Linux'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt install libgl1-mesa-dev libgconf-2-4 libatk1.0-0 libatk-bridge2.0-0 libgdk-pixbuf2.0-0 libgtk-3-0 libgbm-dev libnss3-dev libxss-dev libasound2 -y

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Test Dependencies
        run: |
          pip install -r test-requirements.txt

      - name: Install Package
        run: |
          pip install .

      - uses: browser-actions/setup-chrome@latest
        if: matrix.browser == 'chrome'
        with:
          chrome-version: stable

      - uses: browser-actions/setup-firefox@latest
        if: matrix.browser == 'firefox'

      - uses: browser-actions/setup-edge@latest
        if: matrix.browser == 'edge'

      - name: Run Tests in ${{ matrix.browser }}
        run: |
          pytest -n 2 -v -vrxs --headless=${{ matrix.headless }} --browser=${{ matrix.browser }}
